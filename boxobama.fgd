//====== Copyright © 1996-2005, Valve Corporation, All rights reserved. =======
//
// Purpose: BoxObama entity definition file (.fgd) 
//
//=============================================================================

@include "halflife2.fgd"

@NPCClass base(TalkNPC, PlayerCompanion, RappelNPC, PolicingNPC) studio() = npc_citizen : "Citizen"
[

	spawnflags(Flags) =
	[
		65536 : "[65536] Follow player on spawn" : 0
		131072 : "[131072] Medic" : 0
		262144 : "[262144] Random Head" : 1
		524288 : "[524288] Ammo Resupplier" : 0
		1048576 : "[1048576] Not Commandable" : 0
		4194304 : "[4194304] Random male head" : 0
		8388608 : "[8388608] Random female head" : 0
		16777216 : "[16777216] Use RenderBox in ActBusies" : 0
		33554432 : "[33554432] Player can +USE and +WALK (Alt + E) to toggle squad (disables automatically joining)" : 0
	]

	additionalequipment(choices) : "Weapons" : "0" =
	[
		"weapon_smg1" : "MP5 Navy"
		"weapon_ar2" : "AKM"
		"weapon_stunstick" : "Stun Stick"
		"weapon_crowbar" : "Knife"
		"weapon_shotgun" : "Shotgun"
		"weapon_pistol" : "Glock 18"
		"weapon_357" : "50AE Desert Eagle"
		"weapon_crossbow" : "Crossbow"
		"weapon_rpg" : "RPG"
		"0"  : "Nothing"
	]

	ammosupply(choices) : "Ammo to Resupply (if spawnflag set)" : "9MM" =
	[
		"9MM" : "9×19mm Parabellum"
		"556" : "5.56×45mm NATO"
		"50AE" : ".50 Action Express"
		"Buckshot" : "12-gauge Buckshot"
		"RPG_Round" : "RPG"
		"Grenade" : "Grenade"
		"XBowBolt" : "Crossbow Bolt"
	]
	ammoamount(integer) : "Amount of ammo to give" : 1

	citizentype(choices) : "Type" : "Default" =
	[
		0 : "Default"	 
		1 : "Downtrodden"
		2 : "Refugee"
		3 : "Rebel"
		4 : "Unique"
	]

	expressiontype(choices) : "Expression Type" : "Random" =
	[
		0 : "Random"
		1 : "Scared"
		2 : "Normal"
		3 : "Angry"
	]

	//!!!BUGBUG - don't ship with these names
	//!!!FIXME - don't ship with these names
	model(choices) : "Model" : "models/humans/group01/male_01.mdl" =
	[
		"models/humans/group01/male_01.mdl" : "Male 1"
		"models/humans/group01/male_02.mdl" : "Male 2"
		"models/humans/group01/male_03.mdl" : "Male 3"
		"models/humans/group01/male_04.mdl" : "Male 4"
		"models/humans/group01/male_05.mdl" : "Male 5"
		"models/humans/group01/male_06.mdl" : "Male 6"
		"models/humans/group01/male_07.mdl" : "Male 7"
		"models/humans/group01/male_08.mdl" : "Male 8"
		"models/humans/group01/male_09.mdl" : "Male 9"
		"models/humans/group01/female_01.mdl" : "Female 1"
		"models/humans/group01/female_02.mdl" : "Female 2"
		"models/humans/group01/female_03.mdl" : "Female 3"
		"models/humans/group01/female_04.mdl" : "Female 4"
		"models/humans/group01/female_06.mdl" : "Female 5"
		"models/humans/group01/female_07.mdl" : "Female 6"
		"models/humans/male_cheaple.mdl" : "Cheaple Male 1"
		"models/odessa.mdl" : "Odessa (Must Be Unique)"
	]

	ExpressionOverride(string) : "Facial expression override"

	notifynavfailblocked(choices) : "Fire output when Nav is blocked?" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]

	neverleaveplayersquad(choices) : "Permanent squad member?" : 0 : "A permanent squad member cannot leave the player's squad unless killed or explicity removed by entity I/O. Only use this if you're sure you want to override the default AI." =
	[
		0 : "No. This is default behavior."
		1 : "Yes, stay in squad until death."
	]

	denycommandconcept(string) : "Deny command speech concept" : "" : "If you want your citizens to squad with the player but not obey commands the player gives to move the squad, put a concept here and this citizen will speak the concept instead of obeying the order."
	
	SetTossMedkits(choices) : "Toss medkits?" : 0 : "Episodic only. Griggs in Half-Life 2: Episode Two uses experimental code that allows him to toss medkits at the player from a distance. This activates that code on this NPC if it is a medic. Does not work with ammo resuppliers." =
	[
		0 : "No"
		1 : "Yes"
	]
	
	AlternateAiming(choices) : "Alternate aiming animations" : 0 : "Causes this citizen to use readiness aiming animations with a SMG, AR2, or shotgun. When running or walking while aiming/shooting, they will hold their weapon around their upper-chest instead of from their hip." =
	[
		0 : "No"
		1 : "Yes"
	]

    //Inputs
	input RemoveFromPlayerSquad(void) : "Remove from player squad, instantly."
	input SetExpressionOverride(string) : "Set facial expression override"

	input StartPatrolling(void) : "Patrol whenever I'm idle or alert."
	input StopPatrolling(void) : "Stop patrolling when I'm idle or alert."
	input SetCommandable(void) : "Makes a previously uncommandable citizen commandable"
	input SetUnCommandable(void) : "Makes a previously commandable citizen uncommandable"
	input SetMedicOn(void) : "Set the medic flag on. Will not change the model or skin of the citizen."
	input SetMedicOff(void) : "Set the medic flag off. Will not change the model or skin of the citizen."
	input SetAmmoResupplierOn(void) : "Set the ammo-resupplier flag on. Will not change the model or skin of the citizen."
	input SetAmmoResupplierOff(void) : "Set the ammo-resupplier flag off. Will not change the model or skin of the citizen."
	input SetTossMedkits(bool) : "Sets whether this NPC can toss medkits."

	// Outputs
	output OnJoinedPlayerSquad(void) : "Fires when joins player squad"
	output OnLeftPlayerSquad(void) : "Fires when leaves player squad"
	output OnFollowOrder(void) : "Fires when ordered to follow player"
	output OnStationOrder(void) : "Fires when ordered to a location by player"
	output OnPlayerUse(void) : "Fires when a player +USEs the citizen"
	output OnNavFailBlocked(void) : "Fires when this citizen's movement fails because he/she is blocked."
	
	output OnHealedNPC(void) : "Fires when this citizen heals a NPC."
	output OnHealedPlayer(void) : "Fires when this citizen heals a player."
	output OnTossMedkit(ehandle) : "Fires when a medkit is tossed. Passes the medkit."
	output OnGiveAmmo(void) : "Fires when ammo is given to the player."
]

@NPCClass base(TalkNPC, PlayerCompanion) studio("models/Barney.mdl") = npc_barney : "Barney"
[
	additionalequipment(choices) : "Weapons" : "weapon_pistol" =
	[
		"weapon_pistol" : "Glock 18"
		"weapon_smg1" : "MP5 Navy"
		"weapon_stunstick" : "Stun Stick"
		"weapon_shotgun" : "Shotgun"
		"weapon_ar2" : "AKM"
		"0" : "Nothing"
	]

	ExpressionOverride(string) : "Facial expression override"
	input SetExpressionOverride(string) : "Set facial expression override"

	// Outputs
	output OnPlayerUse(void) : "Fires when a player +USEs Barney"
]

@BaseClass base(BaseNPC, RappelNPC, GrenadeUser, PolicingNPC) = BaseCombine
[
	additionalequipment(choices) : "Weapons" : "weapon_smg1" =
	[
		"weapon_ar2" : "AKM"
		"weapon_shotgun" : "Shotgun"
		"weapon_smg1" : "MP5 Navy"
		"weapon_rpg" : "RPG"
		"0" : "Nothing"
	]

	spawnflags(Flags) = 
	[
		65536 :  "[65536] Start LookOff" : 0
		131072	: "[131072] Don't drop grenades" : 0
		262144  : "[262144] Don't drop ar2 alt fire (elite only) " : 0
	]
	
	NumGrenades(choices) : "Number of Grenades" : "5" =
	[
		"0" : "None"
		"1" : "1"
		"2" : "2"
		"3" : "3"
		"4" : "4"
		"5" : "5"
		"999999" : "Unlimited"
	]
	
	UnderthrowGrenades(choices) : "Underthrow Grenades" : "0" : "If enabled, this soldier will 'underthrow' their grenades with ACT_SPECIAL_ATTACK1, which looks a lot more like the HL1 grunt animation. This includes grenades thrown during regular behavior and grenades forced with ThrowGrenadeAtTarget." =
	[
		"0" : "No"
		"1" : "Yes"
	]
	
	SetAlternateCapable(choices) : "Alternate Capable" : "0" : "Makes the soldier capable of using both grenades AND energy balls at the same time, regardless of their elite status." =
	[
		"0" : "No"
		"1" : "Yes"
	]

	// Inputs
	input LookOn(void) : "Look normally"	
	input LookOff(void) : "Don't look for myself, use other squad member's eyes"
	input StartPatrolling(void) : "Patrol whenever I'm idle or alert."
	input StopPatrolling(void) : "Stop patrolling when I'm idle or alert."
	input SetElite(bool) : "Sets whether we are an elite. Model will not change, but grenades will transform into energy balls or vice versa."
	input UnderthrowGrenades(bool) : "Sets whether we should underthrow our grenades."
	input SetAlternateCapable(bool) : "Sets whether the soldier is capable of using both grenades and energy balls at the same time."
]


@NPCClass base(BaseCombine) studio() = npc_combine_s : "Combine Soldier"
[
	model(choices) : "Model" : "models/player/t_guerilla.mdl" : "Sets this soldier's model." = 
	[
		"models/combine_soldier.mdl" : "Regular Soldier"
		"models/combine_soldier_prisonguard.mdl" : "Nova Prospekt Soldier"
		"models/combine_super_soldier.mdl" : "Elite Soldier"
		"models/combine_soldirt.mdl" : "Dirty Soldier/EP2 Soldier"
		"models/combine_super_soldirt.mdl" : "Dirty Elite Soldier/EP2 Elite"
		"models/combine_soldirt_prisonguard.mdl" : "Dirty Nova Prospekt Soldier"
		"models/player/t_leet.mdl"	: "Elite Terrorist"
		"models/player/t_phoenix.mdl"	: "Phoenix Terrorist"
		"models/player/t_guerilla.mdl"	: "Guerilla Terrorist"
	]

	tacticalvariant(choices) : "Tactical Variant" : "0" =
	[
		"0" : "Normal Tactics"
		"1" : "Pressure the enemy (Keep advancing)"
		"2" : "Pressure until within 30ft, then normal"
		"3" : "Grenade Happy"
	]
	
	usemarch(choices) : "Use March" : "0" : "When true, will use a special walking animation which blends itself between the idle walking animation and the regular walking animation, allowing for a variety of casual walking animations instead of the standard walk. Used in EP2 for the soldiers in the bridge convoy. WARNING: This animation only has a north component, so it can't sidestep or walk backwards. This keyvalue was previously named 'Walk Easy', but it was changed to avoid confusion with ACT_WALK_EASY, the main idle walking animation." =
	[
		"0" : "No"
		"2" : "Yes"
	]
	
	input Assault(target_destination) : "Start an assault. Parameter passed in should be the name of the rally point."
	input SetTacticalVariant(integer) : "Sets this soldier's tactical variant based on integer value."
]

@NPCClass base(BaseNPC,RappelNPC,NewGrenadeUser,PolicingNPC) studio() = npc_metropolice : "MetroPolice"
[
	model(studio) : "Model" : "models/police.mdl" : "The model of this npc_metropolice. Keep in mind this overrides the 'Efficient' spawnflag which sets the model to police_cheaple.mdl."

	additionalequipment(choices) : "Weapons" : "weapon_pistol" =
	[
		"weapon_pistol" : "Glock 18"
		"weapon_smg1"  : "MP5 Navy"
		"weapon_stunstick"  : "Stun Stick"
		"weapon_crowbar"  : "Knife"
		"weapon_ar2"  : "AKM"
		"weapon_shotgun"  : "Shotgun"
		"weapon_357" : ".50AE Desert Eagle"
		"weapon_rpg"  : "RPG"
		"0"  : "Nothing"
	]

	manhacks(Choices) : "Number of Manhacks" : 0 =
	[
		0 : "None"
		1 : "1"
		2 : "2"
	]

	weapondrawn(Choices) : "Pistol starts drawn" : 0 =
	[
		0 : "No"
		1 : "Yes"
	]
	
	spawnflags(Flags) =
	[
		131072 : "[131072] Simple cops" : 0
		524288 : "[524288] Always stitch" : 0
		1048576 : "[1048576] No chatter" : 0
		2097152 : "[2097152] Arrest enemies" : 0
		4194304 : "[4194304] No far stitching" : 0
		8388608 : "[8388608] Prevent manhack toss" : 0
		16777216: "[16777216] Allowed to respond to thrown objects" : 0
		33554432: "[33554432] Mid-range attacks (halfway between normal + long-range)" : 0
	]
	  
	// Inputs
	input DisableManhackToss(void) : "Disables manhack toss"
	input EnableManhackToss(void) : "Enables manhack toss (which had been disabled by the spawnflag or input)"
	input ActivateBaton(void) : "Set the baton to active"
	input AdministerJustice(void) : "Orders this NPC to administer justice to the player as if they hit this NPC with a can or something. If this NPC cannot respond, it will look for another npc_metropolice to do it."
	input SetWarnings(integer) : "Sets the number of warnings this NPC has given to the player."
	input AddWarnings(integer) : "Adds to the number of warnings this NPC has given to the player."
	input DeployManhack(void) : "Deploys a manhack immediately if one is available."
	input AddManhacks(integer) : "Adds to the number of manhacks this NPC has available."
	input SetManhacks(integer) : "Sets the number of manhacks this NPC has available."

	// Outputs
	output OnStunnedPlayer(void) : "Fires when the player is hit by a stunstick by this NPC."
	output OnCupCopped(void) : "Fires if the player hits me with the cupcop can. ONLY use for x360 achievement."
	output OnHitByPhysicsObject(ehandle) : "Fired when the player hits this NPC with any prop. Passes the thrower as the activator and the prop as the parameter."
	output OutManhack(ehandle) : "Fired the moment when this NPC spawns a manhack. Passes the manhack."
]

@NPCClass base(TalkNPC) studio("models/Monk.mdl") = npc_monk : "Monk"
[
	additionalequipment(choices) : "Weapons" : "weapon_annabelle" =
	[
		"weapon_annabelle" : "Annabelle"
		"weapon_smg1" : "MP5 Navy"
		"weapon_ar2" : "AKM"
		"weapon_stunstick" : "Stun Stick"
		"weapon_crowbar" : "Knife"
		"weapon_shotgun" : "Shotgun"
		"weapon_rpg" : "RPG"
		"0"  : "Nothing"
	]

	HasGun(choices) : "Has Gun" : 1 =
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input PerfectAccuracyOn(void) : "Make every shot at a zombie a headshot"
	input PerfectAccuracyOff(void) : "Return to normal accuracy"
]

@SolidClass base(BaseTank, TankShootSound) = func_tank : "Brush Gun Turret" 
[
	ammotype(choices) : "Ammo type" : "" = 
	[
		"" : "None"
		"9MM" : "9×19mm Parabellum"
		"556" : "5.56×45mm NATO"
		"CombineHeavyCannon" : "Combine Heavy Cannon (Episodic only)"
		"StriderMinigun" : "Strider Minigun"
	]
]

@SolidClass base(BaseTank, TankShootSound) = func_tank_combine_cannon : "Combine sentry cannon"
[
	firerate(string) : "Rate of Fire" : "1.5"

	ammotype(choices) : "Ammo type" : "" = 
	[
		"" : "None"
		"9MM" : "9×19mm Parabellum"
		"556" : "5.56×45mm NATO"
		"CombineHeavyCannon" : "Combine Heavy Cannon"
	]
	
	ControllableVersion(choices) : "Controllable Version" : 0 : "Enables a tweaked version of func_tank_combine_cannon that is designed to be controlled by players and NPCs." =
	[
		0 : "No"
		1 : "Yes"
	]

	input DisableHarrass(void) : "Disable the cannon tracking an unseen player" 
	input EnableHarrass(void) : "Allow the cannon to track and pester a player who is hiding (DEFAULT)"

	output OnShotAtPlayer(void) : "Fired everytime the cannon shoots at the player"
]

@PointClass base(Item) studio("models/items/healthkit.mdl") = item_dynamic_resupply : "A dynamic item. When the player enters the PVS of this entity, " +
    "it will determine the item most needed by the player, spawn one of those items, and remove itself. To determine which item the player most needs, it " +
    "calculates which of the Desired Health/Armor/Ammo ratios the player is farthest from.\n\nIf the player is above all the desired levels, then no item " +
    "will be spawned, unless this item_dynamic_resupply was created by an item_item_crate. In that case, a random piece of ammo used by a weapon, that " +
    "the player has, will be spawned. If the 'Fallback to Health Vial' spawnflag is set, a health vial will be spawned instead of the ammo.\n\nBy default, " +
    "the item_dynamic_resupply uses the values inside the Master resupply, instead of using it's own values. This makes it easy to tweak the desired " +
    "loadout of many resupplies. The BecomeMaster input allows you to switch Masters dynamically as the level progresses."
[
	spawnflags(Flags) =
	[
		1 : "[1] Use Master's values" : 1
		2 : "[2] Is Master" : 0
		4 : "[4] Spawn even if player meets all requirements" : 0
		8 : "[8] Fallback to Health Vial" : 0
		16 : "[16] Alternate master" : 0
	]

	DesiredHealth(float) : "Desired Health Ratio" : "1" : "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max health."
	DesiredArmor(float) : "Desired Armor Ratio" : "0.3" : "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max armor."
	DesiredAmmo9MM(float) : "Desired 9×19mm Parabellum Ammo Ratio" : "0.5" : "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity."
	DesiredAmmo556(float) : "Desired 5.56×45mm NATO Ammo Ratio" : "0.2" : "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity."
	DesiredAmmoBuckshot(float) : "Desired Shotgun Ammo Ratio" : "0.4" : "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity."
	DesiredAmmoRPG_Round(float) : "Desired RPG Ammo Ratio" : "0" : "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity."
	DesiredAmmoGrenade(float) : "Desired Grenade Ammo Ratio" : "0.1" : "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity."
	DesiredAmmo50AE(float) : "Desired .50 Action Express Ammo Ratio" : "0.1" : "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity."
	DesiredAmmoCrossbow(float) : "Desired Crossbow Ammo Ratio" : "0" : "A ratio from 0 to 1. Attempt to fill the player up to this percentage of his max ammo carrying capacity."

	// Inputs
	input CalculateType(void) : "Force the dynamic resupply to calculate which item it should spawn."
	input BecomeMaster(void) : "Make this resupply the master resupply. All other resupplies set to Use Master's Values will now use this resupply's values."
]

@PointClass base(ItemAmmo) studio("models/items/combine_rifle_cartridge01.mdl")= item_ammo_556 : "Box of 5.56×45mm NATO ammo" []
@PointClass base(ItemAmmo) studio("models/items/combine_rifle_cartridge01.mdl")= item_ammo_pistol_large : "Large Box of 5.56×45mm NATO ammo" []
@PointClass base(ItemAmmo) studio("models/items/boxsrounds.mdl")= item_ammo_9mm : "Box of 9×19mm Parabellum ammo" []
@PointClass base(ItemAmmo) studio("models/items/boxsrounds.mdl")= item_ammo_9mm_large : "Large Box of 9×19mm Parabellum ammo" []
@PointClass base(ItemAmmo) studio("models/items/357ammo.mdl")= item_ammo_50ae : "Box of .50 Action Express ammo" []
@PointClass base(ItemAmmo) studio("models/items/357ammobox.mdl")= item_ammo_50AE_large : "Large Box of .50 Action Express ammo" []
@PointClass base(Targetname, Parentname, Angles, RenderFields, BaseFadeProp) studio("models/items/ammocrate_empty.mdl") = item_ammo_crate : "Ammo Crate"
[
	AmmoType(choices) : "Ammo Type" : 0 =
	[
		0 : "9×19mm Parabellum"
		1 : "5.56×45mm NATO"
		2 : "AR2"
		3 : "RPG Rounds"
		4 : "Buckshot"
		5 : "Grenades"
		6 : "357 Magnum"
		7 : "Crossbow"
		8 : "AR2 Alt-Fire Balls"
		9 : "SMG Alt-Fire Grenades"
		10 : "S.L.A.M."
		11 : "Empty"
	]
	
	skin(integer) : "Skin" : 0 : "The ''Empty'' ammo crate can use multiple skins based on other crates. Changing the skin might be reflected in the viewport, but it will only apply to the empty ammo crate."

	// Inputs
	input Kill(void) : "Remove the ammo crate"
	output OnUsed(void) : "Fires when +used by the player."
	output OnAmmoTaken(void) : "Fires the instant ammo is taken from this crate."
	
	input Skin(integer) : "Changes the model skin to the specified number."
]

@PointClass base(Weapon) studio("models/weapons/w_knife_ct.mdl") sphere(fademindist) sphere(fademaxdist) = weapon_crowbar : "Knife" []
@PointClass base(Weapon) studio("models/weapons/w_pist_glock18.mdl") sphere(fademindist) sphere(fademaxdist) = weapon_pistol : "Glock 18" []
@PointClass base(Weapon) studio("models/weapons/w_rif_ak47.mdl") sphere(fademindist) sphere(fademaxdist) = weapon_ar2 : "AKM" []
@PointClass base(Weapon) studio("models/weapons/w_smg_mp5.mdl") sphere(fademindist) sphere(fademaxdist) = weapon_smg1 : "MP5 Navy" []
@PointClass base(Weapon) studio("models/weapons/w_pist_deagle.mdl") sphere(fademindist) sphere(fademaxdist) = weapon_357 : "50AE Desert Eagle" []
@PointClass base(Weapon) studio("models/weapons/w_shot_m3super90.mdl") sphere(fademindist) sphere(fademaxdist) = weapon_shotgun : "Benelli M3 Super 90" []
@PointClass base(Weapon) studio("models/weapons/w_eq_fraggrenade.mdl") sphere(fademindist) sphere(fademaxdist) = weapon_frag : "Frag Grenade" []